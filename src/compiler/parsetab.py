
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD AND ASSIGN COLON COMMA CONST CTMC DIV DTMC ENDMODULE EQ EXP FALSE GLOBAL GT GTEQ INIT LABEL LB LOG LP LT LTEQ MAX MIN MINUS MODELTYPE MODULE MUL NAME NEQ NUM OR POW QUOTE RB RP SEMICOLON STDCDF TRUE TYPE TYPE TYPE TYPEstatement : model_type_statement\n                     | const_value_statementmodel_type_statement : DTMC\n                      | CTMCconst_value_statement : CONST TYPE NAME ASSIGN NUM SEMICOLON'
    
_lr_action_items = {'CONST':([0,],[2,]),'NAME':([7,],[8,]),'SEMICOLON':([10,],[11,]),'DTMC':([0,],[3,]),'CTMC':([0,],[4,]),'NUM':([9,],[10,]),'TYPE':([2,],[7,]),'ASSIGN':([8,],[9,]),'$end':([1,3,4,5,6,11,],[-2,-3,-4,0,-1,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'const_value_statement':([0,],[1,]),'model_type_statement':([0,],[6,]),'statement':([0,],[5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> model_type_statement','statement',1,'p_statement','PRISMParser.py',9),
  ('statement -> const_value_statement','statement',1,'p_statement','PRISMParser.py',10),
  ('model_type_statement -> DTMC','model_type_statement',1,'p_model_type','PRISMParser.py',13),
  ('model_type_statement -> CTMC','model_type_statement',1,'p_model_type','PRISMParser.py',14),
  ('const_value_statement -> CONST TYPE NAME ASSIGN NUM SEMICOLON','const_value_statement',6,'p_const_expression','PRISMParser.py',24),
]
