未完成
    测试parsed model的正确性.在NNRegressor中测试以及checker中测试.
        要验证的方面:比较parsed model和ModelFactory生成的model之间的异同.
        ModelFactory返回的model: labels + modules + stop_condition
        ModelFactory_model:
            repeated Module modules;
            repeated Label label;
            optional Label stop_condition;
        Module:
            string name;
            repeated Constant constants;
            repeated Variable variables;
            repeated Command commands;
        Label:
            string name;
            function bool_expr;

        Thus, comparison step in step:
            1. all constants name value 
            2. variables valrange init_value 
            3. commands guard prob action 

        comparison result:
            1. _F, _U in model solution: call model._fillinstate()
            2. failurecondition UI
            3. stopcondition UI


    LTL公式的输入 UI
    ???Running checker on built model produces different result with PRISM
    优化built model path generation(use FB to reduce length of random path)




已完成
如何确保expression的parsing是正确的？ 单元测试成功 testParseExpr.py
增加label,测试label testLabel.py单元测试成功
修改command语法规则,增加name解析
比较了parsed model和built model之间的异同,即check了两个模型在相同的天数下各个模块的损坏概率,结果是相同.
提前计算每个day对应的failure probability.(在prepareCommands中进行计算,异步计算)：发现可以提高效率，parsed model和built model模型产生随机路径时间基本相同，大约为0.06s.


不足
目前command的update部分不允许出现boolean_expression
因为在parse module的时候,默认将所有的boolean_expression解析为当前command的guard
